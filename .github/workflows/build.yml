name: Deploy Ren'Py Game
on:
  push:
    branches: [current-release]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      # 1. Checkout with explicit path
      - uses: actions/checkout@v4
        with:
          path: the-question-VN-test
          fetch-depth: 0

      # 2. Install Ren'Py with verification
      - name: Install Ren'Py
        run: |
          cd the-question-VN-test
          wget https://www.renpy.org/dl/8.1.3/renpy-8.1.3-sdk.tar.bz2
          tar -xf renpy-*.tar.bz2
          chmod +x renpy-8.1.3-sdk/renpy.sh
          ./renpy-8.1.3-sdk/renpy.sh --version

      # 3. Build with full debugging
      - name: Build Web Version
        run: |
          cd the-question-VN-test
          echo "Pre-build contents:"
          ls -la game/
          
          # Force clean build
          rm -rf game/web &>/dev/null || true
          
          # Build with explicit path
          if ! ./renpy-8.1.3-sdk/renpy.sh ./game/ export --web; then
            echo "::error::Build failed!"
            echo "Current directory: $(pwd)"
            ls -la .
            exit 1
          fi
          
          echo "Post-build contents:"
          ls -la game/web/
          [ -f game/web/index.html ] || { echo "::error::index.html missing"; exit 1; }

      # 4. Deploy with validation
      - name: Prepare Deployment
        run: |
          cd the-question-VN-test/game/web
          touch .nojekyll
          echo "Final files to deploy:"
          ls -la
          du -sh .

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: the-question-VN-test/game/web

      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v3
